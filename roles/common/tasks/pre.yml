# get hostname
- command: hostname
  register: hostname

- set_fact:
    actual_hostname: hostname.stdout

- name: tail resolver
  lineinfile: dest=/etc/resolvconf/resolv.conf.d/tail create=yes state=present line="nameserver 172.16.5.1"

# APT
- name: APT sources for xenial
  copy: >
    src=sources.list.xenial dest=/etc/apt/sources.list owner=root group=root mode=0644
  notify: apt update
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: APT sources for bionic
  copy: >
    src=sources.list.bionic dest=/etc/apt/sources.list owner=root group=root mode=0644
  notify: apt update
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'

# APT packages + Kernel
- name: apt packages
  apt: pkg={{ item }} state=latest cache_valid_time=86400 force=yes install_recommends=yes update_cache=yes
  with_items:
    - apt-transport-https
    - linux-headers-4.15.0-29-lowlatency
    - linux-image-4.15.0-29-lowlatency
    - linux-sound-base

# FIRMWARE
- name: kernel firmware check
  tags: firmware
  stat: path=/lib/firmware/.git
  register: git_dir
  ignore_errors: yes

- name: kernel firmware download if not exists
  tags: firmware
  shell: cd /lib/firmware; git pull -f origin master; git checkout -f
  when: git_dir.stat.exists

- name: kernel firmware init .git
  tags: firmware
  shell: cd /lib/firmware; git init; git remote add origin https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git; git fetch --depth=1; git reset --mixed origin/master
  when: git_dir.stat.exists == false

# LOCAL tuning
- name: rc.local
  copy: >
    src=rc.local dest=/etc/rc.local owner=root group=root mode=0755

- name: tune-ssd script
  copy: >
    src=tune-ssd dest=/usr/local/sbin/tune-ssd owner=root group=root mode=0755
  notify: exec rc-local

- name: force caching to RAM dirty_ratio to 99 perc
  lineinfile: dest=/etc/sysctl.conf create=yes state=present line="vm.dirty_ratio = 99"
  notify: update sysctl

- name: force caching to RAM dirty_background_ratio 50 perc
  lineinfile: dest=/etc/sysctl.conf create=yes state=present line="vm.dirty_background_ratio = 50"
  notify: update sysctl

- name: force caching to RAM dirty_expire_centisecs to 30min write delay
  lineinfile: dest=/etc/sysctl.conf create=yes state=present line="vm.dirty_expire_centisecs = 1800"
  notify: update sysctl

- name: force caching to RAM dirty_writeback_centisecs to 30min write delay
  lineinfile: dest=/etc/sysctl.conf create=yes state=present line="vm.dirty_writeback_centisecs = 1800"
  notify: update sysctl

# iscsi tune
- name: tune iscsi replace timeout
  lineinfile: dest=/etc/iscsi/iscsid.conf regexp='^node.session.timeo.replacement_timeout' line='node.session.timeo.replacement_timeout = 1800' state=present

- name: tune iscsi noop timeout
  lineinfile: dest=/etc/iscsi/iscsid.conf regexp='^node.conn\[0\].timeo.noop_out_timeout' line='node.conn[0].timeo.noop_out_timeout = 1800' state=present

# DRIVERS
- name: nvidia
  apt: pkg={{ item }} state=latest cache_valid_time=86400 force=yes install_recommends=yes update_cache=yes
  with_items:
    - xserver-xorg-video-nouveau
    - nouveau-firmware
